<form class="list-form" action="" id="list-form" method="post">
    <input class="list-form--title" type="text" placeholder="Añadir una lista...">
    <div class="list-item--container">
    </div>
    <button class="btn list-form__submit">Cerrar</button>
    <div class="list-form__wrapper-btn">
        <select class="list-form__select-tag">
            <option class="fa fa-tag" value="none">&#xf02b Añadir etiqueta</option>
        </select>
    </div>
</form>

<section class="list-viewer">
    <% for @List in @Lists %>
        <article class="list">
            <h3 class="list--title" list-id="<%= @List.id %>"><%= @List.title %></h3>
            <div class="list--content">
                <% for @item in @List.items %>
                    <p class="list--content_item" item-id="<%= @item.id %>">
                        <input type="checkbox" <%= (@item.checked == 1) ? 'checked="true"' : '' %> onclick="return false;">
                        <span><%= @item.content %></span>
                    </p>
                <% end %>
            </div>
            <div>
                <p class="list--date">Creada: <%= @List.create_date %></p>
                <p class="list--date">Editada: <%= @List.update_date %></p>
            </div>
        </article>
    <% end %>
</section>

<script type="text/javascript" charset="utf-8">
    let form = document.querySelector("form"),
        listFormTitle = document.querySelector(".list-form--title"),
        listItemContainer = document.querySelector('.list-item--container');

    const ITEM_ELEMENT = () => {
        let idNode = new Date();

        idNode = `item-${idNode.getHours()}${idNode.getMinutes()}${idNode.getSeconds()}`;

        return `
            <fieldset class="list-item">
                <label class="list-item__label" for="${idNode}">+</label>
                <input class="list-item__field" type="text" placeholder="Elemento de lista" id="${idNode}">
                <span class="fa fa-times list-item__close" aria-hidden="true"></span>
            </fieldset>
        `;
    };

    form.addEventListener('submit', e => {
        e.preventDefault();

        let titleList = form.querySelector('.list-form--title').value,
            itemsContainer = Array.from(form.querySelector('.list-item--container').children),
            itemsList = [];

        if(itemsContainer.length > 1){
            itemsContainer.forEach(child => {
                let check = child.querySelector('input[type="checkbox"]'),
                    text = child.querySelector('input[type="text"]');

                if(check){
                    itemsList.push({checked: check.checked, content: text.value})
                }
            });

            fetch('/', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    title: titleList,
                    items: itemsList
                })
            })
                .then(res => res.ok ? res : Promise.reject(res))
                .then(res => {
                    if(res.status === 200){
                        alert('¡Lista añadida correctamente!');
                        location.reload();
                    }
                })
                .catch(err => {
                    console.error(err);
                    alert('Error al almacenar la lista');
                });
        }

        form.classList.remove('new-list');
        listFormTitle.value = '';
        listFormTitle.setAttribute('placeholder', 'Añadir una lista...');
        listItemContainer.innerHTML = '';
    });

    form.addEventListener('click', e => {
        let node = e.target;

        if(node.matches('.list-form--title') && !form.classList.contains('new-list')) {
            e.target.setAttribute('placeholder', 'Título');
            form.classList.add('new-list');

            listItemContainer.insertAdjacentHTML('beforeend', ITEM_ELEMENT());
        }

        if(node.matches('.list-item__close')){
            listItemContainer.removeChild(node.parentNode);
        }

        if(node.matches('input[type="checkbox"]')){
            let parent = node.parentNode,
                field = parent.parentNode.querySelector('.list-item__field');

            if(node.checked){
                parent.classList.add('checked');
                field.setAttribute('checked', 'true');
            }else{
                parent.classList.remove('checked');
                field.removeAttribute('checked');
            }
        }
    });

    form.addEventListener('input', e => {
        let node = e.target;

        if(node.matches('.list-item__field')){
            let parent = node.parentNode,
                label = parent.querySelector('.list-item__label'),
                editing = node.getAttribute('editing');

            if(node.value.length > 0 && !editing){
                listItemContainer.insertAdjacentHTML('beforeend', ITEM_ELEMENT());
                node.setAttribute('editing', 'true');
                label.innerHTML = `<input type="checkbox">`;
            }

            if(node.value.length === 0 && editing){
                node.removeAttribute('editing');
                listItemContainer.removeChild(parent.parentNode.lastElementChild);
                label.innerHTML = `+`;
            }
        }
    });
</script>